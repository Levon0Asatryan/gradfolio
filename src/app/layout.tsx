import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { SideBarWrapper } from "@/components/sidebar/SideBarWrapper";
import { ThemeWrapper } from "@/components/theme/ThemeWrapper";
import { cookies } from "next/headers";
import { type ReactNode } from "react";
import type { ThemeMode } from "@/components/theme/utils/types/types";
import { cookiesThemeKey } from "@/utils/constants/constants";
import { Analytics } from "@vercel/analytics/next";
import { SpeedInsights } from "@vercel/speed-insights/next";
import ThemeRegistry from "@/components/theme/ThemeRegistry";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Gradfolio",
  description: "Generated by NPUA students",
};

interface RootLayoutProps {
  children: ReactNode;
}

export default async function RootLayout({ children }: Readonly<RootLayoutProps>) {
  const cookieStore = await cookies();

  const initialMode = cookieStore.get(cookiesThemeKey)?.value as ThemeMode | undefined;

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable}`}
        style={{ padding: 0, margin: 0 }}
      >
        <ThemeRegistry>
          <ThemeWrapper initialMode={initialMode}>
            <SideBarWrapper>{children}</SideBarWrapper>
          </ThemeWrapper>
        </ThemeRegistry>

        <SpeedInsights />
        <Analytics />
      </body>
    </html>
  );
}
